@model IEnumerable<LiveCode.Models.Mercury>

@{
    ViewBag.Title = "Index";
}





<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>


<h1>Mercury Measurments in Chart.JS using JSON from ASP.NET Core API</h1>

<canvas id="canvas" width="740" height="200"></canvas>

<script>
    /*
    $.getJSON('http://sql2json.azurewebsites.net/api/Mercuries', function(data) {
        console.log(data);
    });
    */

    var axisX = [];
    var axisY = [];

    function drawLineChart() {

        $.ajax({
            url: 'http://sql2json.azurewebsites.net/api/Mercuries',
            dataType: 'json',
            type: 'get',
            cache: false,
            success: function (data) {
                $(data).each(function (index, value) {
                    axisX.push(value.dateTimeStart);
                    axisY.push(value.hg);
                });
            }

        });


        // Create the chart.js data structure using 'labels' and 'data'

        var tempData = {
            labels: axisX,
            datasets: [
                {
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: axisY
                }
            ]
        };

        // Get the context of the canvas element we want to select
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");

        // Instantiate a new chart
        var myChart = new Chart(ctx, {
            type: 'line',
            data: tempData,
            options: {
                scales: {
                    xAxes: [{
                        display: true
                    }]
                }
            }
            
        });

    }

    drawLineChart();
</script>

<h2>Mercury Measurments In Table format</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.DateTimeStart)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Hg)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Unit)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.DateTimeStart)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Hg)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Unit)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Mercury_Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Mercury_Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Mercury_Id })
        </td>
    </tr>
}

</table>
